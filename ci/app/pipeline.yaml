AWSTemplateFormatVersion: '2010-09-09'
Description: 'Service Pipeline: Source → Build → Deploy Service (consumes shared infrastructure)'

Parameters:
  # =========================================================
  # Required Parameters
  # =========================================================
  PipelineName:
    Type: String
    Description: 'CodePipeline name (format: <service>-<env>)'

  ServiceName:
    Type: String
    Description: 'ECS service name (e.g. demo-rpc or demo-api)'

  AppRepo:
    Type: String
    Description: 'Application repository (format: <org>/<repo>)'

  InfraRepo:
    Type: String
    Description: 'Infra templates repository (format: <org>/<repo>)'

  Env:
    Type: String
    Default: 'default'
    AllowedValues: [ default, dev, test, preonline, online ]
    Description: 'Deployment environment (allowed: default, dev, test, preonline, online)'

  # =========================================================
  # Optional Parameters
  # =========================================================
  DefaultBranch:
    Type: String
    Default: 'main'
    Description: 'Git default branch'

  DefaultLane:
    Type: String
    Default: 'default'
    Description: 'default lane name'

  ModulePath:
    Type: String
    Default: '.'
    Description: 'Module path (relative to project root)'

  ConnectionArn:
    Type: String
    Description: 'CodeStar connection ARN (GitHub integration)'

  BuildSpec:
    Type: String
    Default: 'ci/buildspec.yaml'
    Description: 'CodeBuild buildspec file path (relative to source root)'

  ContainerImage:
    Type: String
    Default: 'aws/codebuild/standard:7.0'
    Description: 'Container image for CodeBuild (e.g., aws/codebuild/standard:7.0)'

  CloudFormationDeployRoleArn:
    Type: String
    Description: 'IAM Role ARN for CloudFormation deployments'

  CodePipelineRoleArn:
    Type: String
    Description: 'IAM Role ARN for CodePipeline'

  CodeBuildRoleArn:
    Type: String
    Description: 'IAM Role ARN for CodeBuild'

Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${PipelineName}-build'
      Description: !Sub 'CodeBuild project for ${PipelineName}'
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
        Name: BuildOut
      Environment:
        Type: LINUX_CONTAINER
        Image: !Ref ContainerImage
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: MODULE_PATH
            Type: PLAINTEXT
            Value: !Ref ModulePath
          - Name: SERVICE_NAME
            Type: PLAINTEXT
            Value: !Ref ServiceName
          - Name: APP_ENV
            Type: PLAINTEXT
            Value: !Ref Env
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpec
      TimeoutInMinutes: 60

  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      # BucketName: !Sub 'ci-${PipelineName}-${Env}-artifacts'
      VersioningConfiguration:
        Status: Enabled
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket

      Variables:
        - Name: LANE
          DefaultValue: !Ref DefaultLane
          Description: 'Lane name'
        - Name: BRANCH
          DefaultValue: !Ref DefaultBranch
          Description: 'Branch name'

      Stages:
        - Name: Source
          Actions:
            - Name: InfraSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref InfraRepo
                BranchName: 'main'
                OutputArtifactFormat: CODE_ZIP
                DetectChanges: false
              OutputArtifacts:
                - Name: InfraOut
            - Name: AppSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref AppRepo
                BranchName: !Ref DefaultBranch
                OutputArtifactFormat: CODEBUILD_CLONE_REF
                DetectChanges: false
              OutputArtifacts:
                - Name: AppOut

        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: InfraOut
                - Name: AppOut
              OutputArtifacts:
                - Name: BuildOut
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: InfraOut   # buildspec.yaml should be here
                EnvironmentVariables: !Sub |
                  [
                    {"name":"LANE","value":"#{variables.LANE}","type":"PLAINTEXT"},
                    {"name":"BRANCH","value":"#{variables.BRANCH}","type":"PLAINTEXT"},
                    {"name":"MODULE_PATH","value":"${ModulePath}","type":"PLAINTEXT"},
                    {"name":"SERVICE_NAME","value":"${ServiceName}","type":"PLAINTEXT"},
                    {"name":"APP_ENV","value":"${Env}","type":"PLAINTEXT"}
                  ]
              RunOrder: 1

        - Name: DeployService
          Actions:
            - Name: CFNDeployService
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: InfraOut
                - Name: BuildOut
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub 'app-${ServiceName}-${Env}-#{variables.LANE}'
                TemplatePath: 'InfraOut::ci/app/templates/service-stack.yaml'
                TemplateConfiguration: 'BuildOut::cfn-params.json'
                RoleArn: !Ref CloudFormationDeployRoleArn
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM'
                ParameterOverrides: !Sub |
                  {
                    "ServiceName": "${ServiceName}",
                    "Env": "${Env}",
                    "Lane": "#{variables.LANE}"
                  }

      RestartExecutionOnUpdate: true

Outputs:
  PipelineNameOut:
    Value: !Ref PipelineName
  CodeBuildProjectOut:
    Value: !Ref CodeBuildProject
